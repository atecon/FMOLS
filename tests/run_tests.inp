set verbose off
clear

set assert stop
include assertion.gfn

include "./src/FMOLS.inp" --force


open denmark.gdt --quiet
series spread = IDE - IBO
bundles Parameters = null
Parameters = Parameters + _(target = "LRM", features = "LRY spread",\
                            k1 = 0, k2 = 1, whiten = 1, kernel = 1,\
                            expected_b2 = {3.78441},\
                            expected_b1 = {1.38237; 3.89836},\
                            expected_v_vec = {0.016688; -0.025723;\
                                            -0.10105; 0.0000; 0.19511;\
                                            0.16602; 0.0000; 0.0000; 0.61259},\
                            expected_sd_u = 0.050075315\
                            )
Parameters = Parameters + _(target = "LRM", features = "LRY spread",\
                            k1 = 1, k2 = 1, whiten = 0, kernel = 2,\
                            expected_b2 = {2.4678; -0.0012935},\
                            expected_b1 = {1.6023; 3.7797},\
                            expected_v_vec = {0.016817; -0.0054788;\
                                              -0.10045; -5.6127e-05;\
                                              0.0000; 0.10797; 0.039773;\
                                              -5.3193e-05; 0.0000;\
                                              0.0000; 0.60052; 0.00033044;\
                                              0.0000; 0.0000; 0.0000;\
                                              3.8357e-07},\
                            expected_sd_u = 0.048203225\
                            )

function void test_FMOLS (const bundles P, const list L)
    print "Start testing FMOLS()."

    loop foreach i P
        # Given
        bundle model = null
        string target = P[i].target
        string features = P[i].features
        list X = @features

        # When
        model = FMOLS(L.@target, X, P[i].k1, P[i].k2, P[i].whiten, P[i].kernel)
        matrix v_vec = vec(lower(model.vcv))

        # Then
        loop j=1..rows(model.bhat_coint)
            assert_almost_equal_num(model.bhat_coint[j], P[i].expected_b1[j], 1e-4)
        endloop

        loop j=1..rows(model.bhat_deter)
            assert_almost_equal_num(model.bhat_deter[j], P[i].expected_b2[j], 1e-5)
        endloop

        loop j=1..rows(v_vec)
            assert_almost_equal_num(v_vec[j], P[i].expected_v_vec[j], 1e-3)
        endloop
        assert_almost_equal_num(sd(model.uhat), P[i].expected_sd_u, 1e-5)
    endloop
end function
test_FMOLS(Parameters, dataset)







function void test_check_sample (void)
    print "Start testing check_sample()."

    # Given

    # When

    # Then
end function
test_check_sample()


print "Finished all tests succesfully."
quit
